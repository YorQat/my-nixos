;; listens to active workspace
(deflisten workspace "scripts/workspace-widget")

(defpoll time_hour :interval "1s" "date +\%H")
(defpoll time_min :interval "1s" "date +\%M")
(defpoll date :interval "30m" "date +\%D")
(defpoll music_title :interval "1s" "scripts/music_info --title")
(defpoll music_artist :interval "1s" "scripts/music_info --artist")
(defpoll music_time :interval "1s" "scripts/music_info --time" )
(defpoll music_time_percent :interval "1s" "scripts/music_info --time_percent")
(defpoll clock_tick :interval "500ms" "scripts/clock_tick")

(defvar clock_tick_show true)
(defvar mails 232)
(defvar theme "")

;; main bar
(defwindow bar
  :monitor 0
  :exclusive true
  :stacking "fg"
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :height "100%"
    :width "50px"
    :anchor "left center")
  (layout))

;; main bar layout
(defwidget layout []
  (centerbox :orientation "v"
    (workspaces)
    (time)
    (system)))

;; nah
(defwidget nah []
  (box))

;; defined by script up top
(defwidget workspaces []
  (literal :content workspace))

(defwidget time []
  (box :class "bubbly time"
    :orientation "v"
    :valign "end"
    :spacing 0
    (box :orientation "v" :spacing 0
      (box time_hour)
      (revealer :reveal clock_tick ":" )
      (box time_min))))

(defwidget system []
    (box :orientation "v"
      (box 
        :class "system"
        :orientation "v"
        :valign "end"
        :spacing 12
          (button :timeout "2000ms" :tooltip "swap theme" :class "biggie" :onclick "scripts/theme" '')
          (button :tooltip "reboot" :class "biggie" :onclick "systemctl reboot" '')
          (button :tooltip "shut down" :class "biggie" :onclick "systemctl poweroff" ''))))

;;; Music Player
(defwindow mp-mini
  :monitor 0
  :stacking "fg"
  :tooltip "music widget"
  :geometry (geometry
    :x "0%"
    :y "0%"
    :height "5px"
    :width "400px"
    :anchor "top center")
  (eventbox :class "bubbly" :onhover "eww -c . open mp; eww -c . close mp-mini; scripts/music_info --cover"))
  
(defwindow mp
  :class "bubbly"
  :monitor 0
  :stacking "fg"
  :tooltip "music widget"
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :height "30px"
    :width "400px"
    :anchor "top center")
(music))
  
  (defwidget music []
    (eventbox :onhoverlost "eww -c . close mp; eww -c . open mp-mini"
      (box :class "music bubbly"
        :orientation "v"
        :space-evenly false
        :halign "left"
        (box :orientation "h"
          (box :class "music-heading"
            :orientation "h"
            (box :class "music-art"
              (image :path "/tmp/eww_mp_thumbnail.png" :image-width 225 :image-height 225))
            (box :class "music-meta"
              :orientation "v"
              (label :text music_artist)
              (label :class "music-player-label" :text music_title)
              (box :class "h" :orientation "v"
                (scale :orientation "h"
                  :value 50
                  :marks "hi"
                  :max 100.0
                  :min 0.0
                  :onchange "notify-send 'new value' '{}'"
                  :class "music-slider")
              )
              (box :orientation "h" :space-evenly true
                  (button :class "music-button" :onclick "mpc repeat" "󰑖")
                  (button :class "music-button" :onclick "mpc prev" "󰒮")
                  (button :class "music-button" :onclick "mpc toggle" "󰐊")
                  (button :class "music-button" :onclick "mpc next" "󰼧")
                  (button :class "music-button" :onclick "mpc random" "󰒟")
              ))
          )
        )
  )))
  

