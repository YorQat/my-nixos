#!/usr/bin/env lua

local filepath = arg[1]  -- Get file path from command line argument

if not filepath then
  print("Usage: lua script.lua <filepath>")
  return
end

local file = io.open(filepath, "r")  -- Open the file in read mode

if not file then
  print("Failed to open the file:", filepath)
  return
end

local output = file:read("*all")  -- Read the entire file content
file:close()  -- Close the file

local lines = {}  -- Table to store parsed lines
local currentParent = ""  -- Track current parent for nested properties

-- Iterate through each line of the file
for line in output:gmatch("[^\r\n]+") do
    local trimmedLine = line:match("^%s*(.-)%s*$")
    
    if trimmedLine ~= "" then
        if trimmedLine:match("%{") then  -- Opening brace indicates a new parent
            currentParent = trimmedLine:match("(%a+)%s*%{")
        elseif trimmedLine:match("%}") then  -- Closing brace indicates end of parent
            currentParent = ""
        else
            local property, value = trimmedLine:match("(%S+)%s*=%s*(.+)")  -- Extract property and value
            if property and value then
                local outputLine = "keyword " .. currentParent .. ":" .. property .. " " .. value
                table.insert(lines, outputLine)  -- Store the parsed line
            else
                print("Failed to parse line:", trimmedLine)
                return
            end
        end
    end
end

if #lines == 0 then
    print("No valid lines found in the file.")
    return
end

local script = 'hyprctl --batch "' .. table.concat(lines, '; ') .. '"'  -- Generate the final script string
print(script)

-- Execute the script
os.execute(script)
